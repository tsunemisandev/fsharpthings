module 銀行口座

open System

// ================基本型================
[<Measure>] type 円

/// 金額型（円の単位を持つ）
type 金額 =
    { 値: decimal<円> }

/// `decimal` から `金額` を作成する関数
val 円 : value: decimal -> 金額

/// 日時型
type 日時 = {値: DateTime}

// ================固有型================

/// 取引の種類（入金 or 出金）
type 取引種別 = 
    | 入金 
    | 出金

/// 取引履歴（種類・金額・日時）
type 取引 = {
    種別: 取引種別
    金額: 金額
    日時: 日時
}

/// 銀行口座（残高 + 取引履歴）
type 口座 = {
    残高: 金額
    取引履歴: 取引 list
}

/// 新規口座を作成
val 口座を作成 : 初期残高: 金額 -> 口座

/// 入金する
val 入金する : 金額: 金額 -> 口座: 口座 -> 口座

/// 出金する（残高不足なら変更なし）
val 出金する : 金額: 金額 -> 口座: 口座 -> 口座

/// 取引履歴を取得
val 取引履歴を取得 : 口座: 口座 -> 取引 list

/// 取引履歴をフォーマット
val 取引履歴をフォーマット : 口座: 口座 -> string list

/// 過去30日間の取引を取得
val 過去30日間の取引をフォーマット: 口座: 口座 -> string list 